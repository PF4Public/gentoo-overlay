diff -r -u chromium-120.0.6099.129old/components/viz/service/display/surface_aggregator.cc chromium-120.0.6099.129/components/viz/service/display/surface_aggregator.cc
--- chromium-120.0.6099.129old/components/viz/service/display/surface_aggregator.cc	2023-12-21 01:49:05.646315300 +0100
+++ chromium-120.0.6099.129/components/viz/service/display/surface_aggregator.cc	2023-12-21 15:28:15.668850824 +0100
@@ -2228,7 +2228,7 @@
   root_surface_id_ = surface_id;
 
   // Start recording new stats for this aggregation.
-  stats_.emplace();
+  stats_.emplace(AggregateStatistics{});
 
   base::ElapsedTimer prewalk_timer;
   ResolvedFrameData* resolved_frame = GetResolvedFrame(surface_id);
diff -r -u chromium-120.0.6099.129old/mojo/public/cpp/bindings/lib/multiplex_router.cc chromium-120.0.6099.129/mojo/public/cpp/bindings/lib/multiplex_router.cc
--- chromium-120.0.6099.129old/mojo/public/cpp/bindings/lib/multiplex_router.cc	2023-12-21 01:49:10.754764600 +0100
+++ chromium-120.0.6099.129/mojo/public/cpp/bindings/lib/multiplex_router.cc	2023-12-21 13:19:27.412481231 +0100
@@ -870,7 +870,7 @@
   DCHECK(!exclusive_sync_wait_);
 
   scoped_refptr<MultiplexRouter> keep_alive(this);
-  exclusive_sync_wait_.emplace();
+  exclusive_sync_wait_.emplace(ExclusiveSyncWaitInfo{});
   exclusive_sync_wait_->interface_id = interface_id;
   exclusive_sync_wait_->request_id = request_id;
   while (!exclusive_sync_wait_->finished) {
--- a/third_party/blink/common/interest_group/auction_config_mojom_traits.cc
+++ b/third_party/blink/common/interest_group/auction_config_mojom_traits.cc
@@ -207,8 +207,6 @@
       !data.ReadAllBuyersPrioritySignals(&out->all_buyers_priority_signals) ||
       !data.ReadAuctionReportBuyerKeys(&out->auction_report_buyer_keys) ||
       !data.ReadAuctionReportBuyers(&out->auction_report_buyers) ||
-      !data.ReadAuctionReportBuyerDebugModeConfig(
-          &out->auction_report_buyer_debug_mode_config) ||
       !data.ReadRequiredSellerCapabilities(
           &out->required_seller_capabilities) ||
       !data.ReadRequestedSize(&out->requested_size) ||
--- a/third_party/blink/renderer/core/paint/paint_layer_scrollable_area.h
+++ b/third_party/blink/renderer/core/paint/paint_layer_scrollable_area.h
@@ -594,7 +594,7 @@
       mojom::blink::ScrollBehavior scroll_behavior) override {
     if (!should_restore_scroll)
       return;
-    pending_view_state_.emplace();
+    pending_view_state_.emplace(PendingViewState{});
     pending_view_state_->state = view_state;
     pending_view_state_->scroll_behavior = scroll_behavior;
   }
--- a/third_party/blink/renderer/core/layout/inline/line_breaker.cc
+++ b/third_party/blink/renderer/core/layout/inline/line_breaker.cc
@@ -2620,7 +2620,7 @@
       if (!trailing_collapsible_space_.has_value() ||
           trailing_collapsible_space_->item_results != results ||
           trailing_collapsible_space_->item_result_index != index) {
-        trailing_collapsible_space_.emplace();
+        trailing_collapsible_space_.emplace(TrailingCollapsibleSpace{});
         trailing_collapsible_space_->item_results = results;
         trailing_collapsible_space_->item_result_index = index;
         if (item_result.EndOffset() - 1 > item_result.StartOffset()) {
--- a/third_party/webrtc/call/rtp_config.cc
+++ b/third_party/webrtc/call/rtp_config.cc
@@ -258,7 +258,7 @@
   stream_config.raw_payload = raw_payload;
   if (!rtx.ssrcs.empty()) {
     RTC_DCHECK_EQ(ssrcs.size(), rtx.ssrcs.size());
-    auto& stream_config_rtx = stream_config.rtx.emplace();
+    auto& stream_config_rtx = stream_config.rtx.emplace(RtpStreamConfig::Rtx{});
     stream_config_rtx.ssrc = rtx.ssrcs[index];
     stream_config_rtx.payload_type = rtx.payload_type;
   }
--- a/chrome/browser/ui/webui/history/browsing_history_handler.cc
+++ b/chrome/browser/ui/webui/history/browsing_history_handler.cc
@@ -144,7 +144,7 @@
     title_to_set.resize(kShortTitleLength);
   }
 
-  return std::make_tuple(entry.url.spec(), base::UTF16ToUTF8(title_to_set));
+  return std::make_pair(entry.url.spec(), base::UTF16ToUTF8(title_to_set));
 }
 
 // Helper function to check if entry is present in local database (local-side
--- a/media/audio/application_loopback_device_helper.h
+++ b/media/audio/application_loopback_device_helper.h
@@ -5,6 +5,7 @@
 #ifndef MEDIA_AUDIO_APPLICATION_LOOPBACK_DEVICE_HELPER_H_
 #define MEDIA_AUDIO_APPLICATION_LOOPBACK_DEVICE_HELPER_H_
 
+#include <stdint.h>
 #include <string>
 
 #include "media/base/media_export.h"
